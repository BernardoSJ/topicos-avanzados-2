/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import libreria.Usuarios;

/**
 *
 * @author Bernardo SJ
 */
public class inscripcionaevento extends javax.swing.JFrame {

    /**
     * Creates new form inscripcionaevento
     */
    DefaultTableModel tabla;
    
    public inscripcionaevento() {
        initComponents();
        this.setResizable(false);
        getContentPane().setBackground(Color.decode("#74101E"));
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                inicioAlumno n = new inicioAlumno();
                n.setVisible(true);
            }
        });
        String cabecera[] = {"Id", "Nombre", "Maestro", "Tipo evento", "Lugar","Dia", "Hora Inicio", "Hora Final"};
        tabla=new DefaultTableModel(null,cabecera);
        tablacursos.setModel(tabla);
        for (int i = 0; i < Usuarios.registro.eventos.size(); i++) {
            if (Usuarios.registro.eventos.get(i).getCapacidad() > 0) {
                String id = Usuarios.registro.eventos.get(i).getId();
                String nombre = Usuarios.registro.eventos.get(i).getNombre();
                String maestro = Usuarios.registro.eventos.get(i).getNombreMaestro();
                //int capacidad = Usuarios.registro.eventos.get(i).getCapacidad();
                String tipo = Usuarios.registro.eventos.get(i).getTipoEvento();
                String lugar = Usuarios.registro.eventos.get(i).getLugar();
                String dia=Usuarios.registro.eventos.get(i).getDia();
                String horaI = Usuarios.registro.eventos.get(i).getHoraInicio();
                String horaF = Usuarios.registro.eventos.get(i).getHoraFinal();
                Object data[] = {id, nombre, maestro,  tipo, lugar,dia, horaI, horaF};
                tabla.addRow(data);
                combo1.addItem(id);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablacursos = new javax.swing.JTable();
        combo1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Inscripci√≥n a evento");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Selecciona  la ID del evento al que te quieres inscribir");

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton1.setText("Inscribir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cursos a los que te puedes inscribir");

        tablacursos.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        tablacursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablacursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablacursosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablacursos);

        combo1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32)
                        .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int pos=0;
       for(int i=0;i<Usuarios.registro.eventos.size();i++){
           if(Usuarios.registro.eventos.get(i).getId().equals(combo1.getSelectedItem().toString())){
               pos=i;
               break;
           }
       }
       boolean estaEscrito=false;
       if(Usuarios.registro.alumnos.get(Inicio.pos).inscrito.isEmpty()){
           Usuarios.registro.eventos.get(pos).setCapacidad(Usuarios.registro.eventos.get(pos).getCapacidad()-1);
           Usuarios.registro.alumnos.get(Inicio.pos).inscrito.add(Usuarios.registro.eventos.get(pos));
           Usuarios.registro.guardar();
           JOptionPane.showMessageDialog(null,"Registro al evento realizado con exito");
       }else{
       for(int i=0;i<Usuarios.registro.alumnos.get(Inicio.pos).inscrito.size();i++){
           if(Usuarios.registro.alumnos.get(Inicio.pos).inscrito.get(i).getId().equals(Usuarios.registro.eventos.get(pos).getId())){
               estaEscrito=true;
               break;
           }
       }
       if(estaEscrito){
           JOptionPane.showMessageDialog(null,"Ya estas inscrito a ese evnto","ERROR",JOptionPane.ERROR_MESSAGE);
       }else{
           boolean noSePuede=false;
           for(int i=0;i<Usuarios.registro.alumnos.get(Inicio.pos).inscrito.size();i++){
              int horaI=Integer.parseInt(""+Usuarios.registro.eventos.get(pos).getHoraInicio().charAt(0));
              int horaF=Integer.parseInt(""+Usuarios.registro.eventos.get(pos).getHoraFinal().charAt(0));
              int horaIc=Integer.parseInt(""+Usuarios.registro.alumnos.get(Inicio.pos).inscrito.get(i).getHoraInicio().charAt(0));
              int horaFc=Integer.parseInt(""+Usuarios.registro.alumnos.get(Inicio.pos).inscrito.get(i).getHoraFinal().charAt(0));
              if(Usuarios.registro.alumnos.get(Inicio.pos).inscrito.get(i).getDia().equals(Usuarios.registro.eventos.get(pos).getDia()) && (horaI==horaIc || horaF==horaFc)){
                  noSePuede=true;
                  JOptionPane.showMessageDialog(null,"Esa hora ya la tienes ocupada con otro evento");
                  break;
              }else{
                  noSePuede=false;
              }
           }
           if(noSePuede){
               
           }else{
             Usuarios.registro.eventos.get(pos).setCapacidad(Usuarios.registro.eventos.get(pos).getCapacidad()-1);
           Usuarios.registro.alumnos.get(Inicio.pos).inscrito.add(Usuarios.registro.eventos.get(pos));
           Usuarios.registro.guardar();
           JOptionPane.showMessageDialog(null,"Registro al evento realizado con exito");  
           }
       }
       }
       
    }//GEN-LAST:event_jButton1ActionPerformed
    public static int pos;
    private void tablacursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacursosMouseClicked
       pos=0;
      int fila=tablacursos.getSelectedRow();
      String id=(String) tabla.getValueAt(fila,0);
      for(int i=0;i<Usuarios.registro.eventos.size();i++){
          if(Usuarios.registro.eventos.get(i).getId().equals(id)){
              pos=i;
          }
      } 
      contenidoEvento obj=new contenidoEvento(2);
      obj.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_tablacursosMouseClicked

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablacursos;
    // End of variables declaration//GEN-END:variables
}
